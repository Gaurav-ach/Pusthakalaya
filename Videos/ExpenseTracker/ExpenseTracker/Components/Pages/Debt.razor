@page "/debt"
@using ExpenseTracker.Models
@using ExpenseTracker.Components.Model

@inject UserService UserService

<h1>User Debts</h1>

<style>
    /* General Layout for the page */
    h1 {
        text-align: center;
        color: #4CAF50;
    }

    .table {
        width: 100%;
        margin-top: 20px;
        border-collapse: collapse;
    }

    table th, table td {
        padding: 12px;
        border: 1px solid #ddd;
        text-align: left;
    }

    table th {
        background-color: #f2f2f2;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        margin: 5px 0;
        border-radius: 4px;
        border: 1px solid #ccc;
        font-size: 16px;
    }

    .btn-primary {
        width: 100%;
        padding: 10px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #45a049;
        }

    .btn-danger {
        width: 100%;
        padding: 10px;
        background-color: #f44336;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .btn-danger:hover {
            background-color: #e53935;
        }

    h2 {
        margin-top: 30px;
        color: #333;
    }
</style>

<!-- Debt Table -->
<table class="table">
    <thead>
        <tr>
            <th>Debt ID</th>
            <th>Total Debt</th>
            <th>Paid Amount</th>
            <th>Remaining Debt</th>
            <th>Date</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var debt in Data.Debts)
        {
            <tr>
                <td>@debt.Id</td>
                <td>@debt.Amount</td>
                <td>@debt.PaidAmount</td>
                <td>@(debt.Amount - debt.PaidAmount)</td>
                <td>@debt.Date.ToString("MM/dd/yyyy")</td>
                <td>@debt.Description</td>
            </tr>
        }
    </tbody>
</table>

<h2>Add New Debt</h2>
<EditForm Model="newDebt" OnValidSubmit="HandleDebtSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="amount">Debt Amount</label>
        <InputNumber id="amount" @bind-Value="newDebt.Amount" class="form-control" />
    </div>

    <div class="form-group">
        <label for="paidAmount">Paid Amount</label>
        <InputNumber id="paidAmount" @bind-Value="newDebt.PaidAmount" class="form-control" />
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="newDebt.Description" class="form-control" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Add Debt</button>
    </div>
</EditForm>

<h2>Actions</h2>
<button class="btn btn-danger" @onclick="ClearRemainingDebts">Clear All Remaining Debts</button>

@code {
    private AppData Data;
    private Debts newDebt = new Debts();

    protected override void OnInitialized()
    {
        Data = UserService.LoadData() ?? new AppData();
    }

    private void HandleDebtSubmit()
    {
        newDebt.Id = Data.Debts.Count + 1;
        newDebt.Date = DateTime.Now;
        Data.Debts.Add(newDebt);
        UserService.SaveData(Data);

        // Reset form
        newDebt = new Debts();
    }

    private void ClearRemainingDebts()
    {
        // Update PaidAmount to be equal to Amount for each debt (clear the remaining debt)
        foreach (var debt in Data.Debts)
        {
            debt.PaidAmount = debt.Amount;
        }

        // Save the updated data
        UserService.SaveData(Data);
    }
}
